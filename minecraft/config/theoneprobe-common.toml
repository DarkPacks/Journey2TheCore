# How much time (ms) to wait before reporting an exception again
# Range: 1 ~ 10000000
loggingThrowableTimeout = 20000
# Is the probe needed to show the tooltip? 0 = no, 1 = yes, 2 = yes and clients cannot override, 3 = probe needed for extended info only
# Range: 0 ~ 3
needsProbe = 3
# If true the probe will automatically show extended information if it is in your main hand (so not required to sneak)
extendedInMain = false
# If true there will be a bauble version of the probe if baubles is present
supportBaubles = true
# If true there will be a readme note for first-time players
spawnNote = false
# If true show the color of the collar of a wolf
showCollarColor = true
# How to display RF: 0 = do not show, 1 = show in a bar, 2 = show as text
# Range: 0 ~ 2
showRF = 1
# How to display tank contents: 0 = do not show, 1 = show in fluid bar, 2 = show in a bar, 3 = show as text
# Range: 0 ~ 3
showTank = 1
# Format for displaying RF
rfFormat = "COMPACT"
# Format for displaying tank contents
tankFormat = "COMPACT"
# If true show debug info with creative probe
showDebugInfo = true
# If true equal stacks will be compacted in the chest contents overlay
compactEqualStacks = true
# Color for the RF bar
rfbarFilledColor = "ffdd0000"
# Alternate color for the RF bar
rfbarAlternateFilledColor = "ff430000"
# Color for the RF bar border
rfbarBorderColor = "ff555555"
# Color for the tank bar
tankbarFilledColor = "ff0000dd"
# Alternate color for the tank bar
tankbarAlternateFilledColor = "ff000043"
# Color for the tank bar border
tankbarBorderColor = "ff555555"
# If the number of items in an inventory is lower or equal then this number then more info is shown
# Range: 0 ~ 20
showItemDetailThresshold = 4
# The maximum amount of slots (empty or not) to show without sneaking
# Range: 0 ~ 1000
showSmallChestContentsWithoutSneaking = 0
# A list of blocks for which we automatically show chest contents even if not sneaking
showContentsWithoutSneaking = ["storagedrawers:basicdrawers", "storagedrawersextra:extra_drawers", "functionalstorage:oak_1", "functionalstorage:spruce_1", "functionalstorage:birch_1", "functionalstorage:jungle_1", "functionalstorage:acacia_1", "functionalstorage:dark_oak_1", "functionalstorage:crimson_1", "functionalstorage:warped_1", "functionalstorage:framed_1", "functionalstorage:oak_2", "functionalstorage:spruce_2", "functionalstorage:birch_2", "functionalstorage:jungle_2", "functionalstorage:acacia_2", "functionalstorage:dark_oak_2", "functionalstorage:crimson_2", "functionalstorage:warped_2", "functionalstorage:framed_2", "functionalstorage:oak_4", "functionalstorage:spruce_4", "functionalstorage:birch_4", "functionalstorage:jungle_4", "functionalstorage:acacia_4", "functionalstorage:dark_oak_4", "functionalstorage:crimson_4", "functionalstorage:warped_4", "functionalstorage:framed_4", "functionalstorage:compacting_drawer", "functionalstorage:compacting_framed_drawer", "functionalstorage:ender_drawer"]
# A list of blocks for which we don't show chest contents automatically except if sneaking
dontShowContentsUnlessSneaking = []
# A list of blocks for which we don't send NBT over the network. This is mostly useful for blocks that have HUGE NBT in their pickblock (itemstack)
dontSendNBT = []
# A list of <tag>=<name> containing all tooltype tags with their associated name to display
tooltypeTags = ["minecraft:mineable/axe=Axe", "minecraft:mineable/pickaxe=Pickaxe", "minecraft:mineable/shovel=Shovel", "minecraft:mineable/hoe=Hoe"]
# A list of <tag>=<name> containing all harvestability tags with their associated name to display
harvestabilityTags = ["forge:needs_wood_tool=Wood", "forge:needs_gold_tool=Gold", "minecraft:needs_stone_tool=Stone", "minecraft:needs_iron_tool=Iron", "minecraft:needs_diamond_tool=Diamond", "forge:needs_netherite_tool=Netherite"]
# A list of either <modid>:<entityid> to disable the tooltip for specific entities. Can also be a single <modid> to disable an entire mod. Or it can also be '*' to disable everything
blacklistEntities = ["minecraft:area_effect_cloud", "minecraft:arrow", "minecraft:boat", "minecraft:dragon_fireball", "minecraft:evoker_fangs", "minecraft:experience_orb", "minecraft:falling_block", "minecraft:firework_rocket", "minecraft:glow_item_frame", "minecraft:item", "minecraft:item_frame", "minecraft:fireball", "minecraft:leash_knot", "minecraft:lightning_bolt", "minecraft:llama_spit", "minecraft:minecart", "minecraft:chest_minecart", "minecraft:command_block_minecart", "minecraft:furnace_minecart", "minecraft:hopper_minecart", "minecraft:spawner_minecart", "minecraft:tnt_minecart", "minecraft:shulker_bullet", "minecraft:small_fireball", "minecraft:snowball", "minecraft:spectral_arrow", "minecraft:experience_bottle", "minecraft:potion", "minecraft:trident", "minecraft:wither_skull", "minecraft:player", "minecraft:fishing_bobber", "create:super_glue", "create:crafting_blueprint", "create:contraption", "create:stationary_contraption", "create:gantry_contraption", "create:carriage_contraption", "create:potato_projectile", "create:seat", "gateways:gateway", "apotheosis:obsidian_arrow", "apotheosis:broadhead_arrow", "apotheosis:explosive_arrow", "apotheosis:mining_arrow", "projecte:fire_projectile", "projecte:homing_arrow", "projecte:lava_projectile", "projecte:lens_projectile", "projecte:mob_randomizer", "projecte:nova_catalyst_primed", "projecte:nova_cataclysm_primed", "projecte:swrg_projectile", "projecte:water_projectile", "dabomb:bomb", "dabomb:bouncy_bomb", "dabomb:sticky_bomb", "dabomb:bomb_fish", "dabomb:dirt_bomb", "dabomb:dry_bomb", "dabomb:water_bomb", "dabomb:lava_bomb", "dabomb:bee_bomb", "dabomb:flower_bomb", "dabomb:ender_bomb", "dabomb:dynamite", "dabomb:sticky_dynamite", "dabomb:bouncy_dynamite", "dabomb:c4", "cofh_core:knife", "cofh_core:electric_arc", "cofh_core:electric_field", "thermal:basalz", "thermal:blizz", "thermal:blitz", "thermal:basalz_projectile", "thermal:blizz_projectile", "thermal:blitz_projectile", "thermal:explosive_grenade", "thermal:fire_grenade", "thermal:ice_grenade", "thermal:lightning_grenade", "thermal:earth_grenade", "thermal:ender_grenade", "thermal:glowstone_grenade", "thermal:redstone_grenade", "thermal:slime_grenade", "thermal:phyto_grenade", "thermal:nuke_grenade", "thermal:fire_tnt", "thermal:ice_tnt", "thermal:lightning_tnt", "thermal:earth_tnt", "thermal:ender_tnt", "thermal:glowstone_tnt", "thermal:redstone_tnt", "thermal:slime_tnt", "thermal:phyto_tnt", "thermal:nuke_tnt", "gravityforce:physics_block", "insanelib:area_effect_cloud_3d", "alexsmobs:shark_tooth_arrow", "alexsmobs:tossed_item", "alexsmobs:sand_shot", "alexsmobs:cachalot_echo", "alexsmobs:enderiophage_rocket", "alexsmobs:void_worm_shot", "sophisticatedbackpacks:everlasting_backpack_item", "dirt_flinger:thrown_dirt", "impostore:impost_ore", "farmersdelight:rotten_tomato", "born_in_chaos_v1:projectile_staffof_blindness", "born_in_chaos_v1:fallenchaosknight_n", "born_in_chaos_v1:projectile_staffof_magic_arrows", "eyesinthedarkness:eyes", "camera:image_frame", "cyclic:magic_net", "cyclic:torch_bolt", "cyclic:boomerang_stun", "cyclic:boomerang_carry", "cyclic:boomerang_damage", "cyclic:dungeon", "cyclic:eye", "cyclic:lightning_bolt", "cyclic:snow_bolt", "cyclic:fire_bolt", "cyclic:stone_bolt", "cyclic:laser_bolt", "cyclic:magic_missile", "cyclic:conveyor_item", "cyclic:darkfire_bolt", "cyclic:ender_fishing", "artifacts:mimic", "distantfriends:friend", "tconstruct:fancy_item_frame", "tconstruct:glow_ball", "tconstruct:efln_ball", "tconstruct:quartz_shuriken", "tconstruct:flint_shuriken", "tconstruct:indestructible_item"]

